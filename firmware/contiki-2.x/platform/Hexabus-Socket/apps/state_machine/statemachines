// Automatic power off (needs BUTTON_HAS_EID and the plug broadcasting its own power meter value)

    int numberOfTransitions = 3;
    eeprom_write_block(&numberOfTransitions, (void*)EE_STATEMACHINE_TRANSITIONS, 1);

    struct transition trans;
    trans.fromState = 0;
    trans.cond = 0; // condition index
    trans.eid = 1;
    trans.goodState = 1;
    trans.badState = 1;
    trans.value.datatype = HXB_DTYPE_BOOL;
    *(uint8_t*)&trans.value.data = HXB_TRUE;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 1;
    trans.cond = 1; // condition index
    trans.eid = 1;
    trans.goodState = 2;
    trans.badState = 2;
    trans.value.datatype = HXB_DTYPE_BOOL;
    *(uint8_t*)&trans.value.data = HXB_TRUE;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + (sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 2;
    trans.cond = 2; // condition index
    trans.eid = 1;
    trans.goodState = 1;
    trans.badState = 1;
    trans.value.datatype = HXB_DTYPE_BOOL;
    *(uint8_t*)&trans.value.data = HXB_TRUE;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + (sizeof(struct transition) * 2)), sizeof(struct transition));
    PROCESS_PAUSE();

    int numberOfDatetimeTransitions = 1;
    eeprom_write_block(&numberOfDatetimeTransitions, (void*)EE_STATEMACHINE_DATETIME_TRANSITIONS, 1);

    trans.fromState = 2;
    trans.cond = 3; // condition index
    trans.eid = 1;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_BOOL;
    *(uint8_t*)&trans.value.data = HXB_FALSE;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_DATETIME_TRANSITIONS), sizeof(struct transition));
    PROCESS_PAUSE();

    // conditions
    struct condition cond;

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 4;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_BOOL;
    *(uint8_t*)&cond.value.data = HXB_TRUE;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS, sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 2;
    cond.op = STM_LT;
    cond.value.datatype = HXB_DTYPE_UINT32;
    *(uint32_t*)&cond.value.data = 5;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + (sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 2;
    cond.op = STM_GT;
    cond.value.datatype = HXB_DTYPE_UINT32;
    *(uint32_t*)&cond.value.data = 5;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + (sizeof(struct condition) * 2), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 0;
    cond.op = 0x80;
    cond.value.datatype = HXB_DTYPE_TIMESTAMP;
    *(uint32_t*)&cond.value.data = 240;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + (sizeof(struct condition) * 3), sizeof(struct condition));
    PROCESS_PAUSE();


// Presence detector one board

{
    int numberOfTransitions = 3;
    eeprom_write_block(&numberOfTransitions, (void*)EE_STATEMACHINE_TRANSITIONS, 1);

    struct transition trans;
    trans.fromState = 0;
    trans.cond = 0; // condition index
    trans.eid = 26;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 2;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 1; // condition index
    trans.eid = 26;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 0;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + (sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 2; // condition index
    trans.eid = 26;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 1;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + 2*(sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    // conditions
    struct condition cond;

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 24;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 1;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS, sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 24;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 0;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + (sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 26;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 2;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + 2*(sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();
  }

// Demo Steckdose

{
    int numberOfTransitions = 2;
    eeprom_write_block(&numberOfTransitions, (void*)EE_STATEMACHINE_TRANSITIONS, 1);

    struct transition trans;
    trans.fromState = 0;
    trans.cond = 0; // condition index
    trans.eid = 1;
    trans.goodState = 1;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_BOOL;
    *(uint8_t*)&trans.value.data = HXB_FALSE;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 1;
    trans.cond = 0; // condition index
    trans.eid = 1;
    trans.goodState = 0;
    trans.badState = 1;
    trans.value.datatype = HXB_DTYPE_BOOL;
    *(uint8_t*)&trans.value.data = HXB_TRUE;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + (sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    // conditions
    struct condition cond;

    cond.sourceIP[0] = 0xfe;
    cond.sourceIP[1] = 0x80;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0xce;
    cond.sourceIP[9] = 0xb5;
    cond.sourceIP[10] = 0x5a;
    cond.sourceIP[11] = 0x0b;
    cond.sourceIP[12] = 0x04;
    cond.sourceIP[13] = 0xde;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x00;
    cond.sourceEID = 25;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 1;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS, sizeof(struct condition));
    PROCESS_PAUSE();
}

// Rolladen

{
    int numberOfTransitions = 10;
    eeprom_write_block(&numberOfTransitions, (void*)EE_STATEMACHINE_TRANSITIONS, 1);

    struct transition trans;
    trans.fromState = 0;
    trans.cond = 0; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 1;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 1; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 255;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + (sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 2; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 1;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + 2*(sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 3; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 255;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + 3*(sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 4; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 0;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + 4*(sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();
    
    trans.fromState = 0;
    trans.cond = 5; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 1;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + 5*(sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 6; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 255;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + 6*(sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 7; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 1;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + 7*(sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 8; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 255;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + 8*(sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();

    trans.fromState = 0;
    trans.cond = 9; // condition index
    trans.eid = 23;
    trans.goodState = 0;
    trans.badState = 0;
    trans.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&trans.value.data = 0;
    eeprom_write_block(&trans, (void*)(1 + EE_STATEMACHINE_TRANSITIONS + 9*(sizeof(struct transition))), sizeof(struct transition));
    PROCESS_PAUSE();
    // conditions
    struct condition cond;

    cond.sourceIP[0] = 0xfe;
    cond.sourceIP[1] = 0x80;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x50;
    cond.sourceIP[10] = 0xc4;
    cond.sourceIP[11] = 0xff;
    cond.sourceIP[12] = 0xfe;
    cond.sourceIP[13] = 0x04;
    cond.sourceIP[14] = 0x90;
    cond.sourceIP[15] = 0x02;
    cond.sourceEID = 25;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 2;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS, sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0xfe;
    cond.sourceIP[1] = 0x80;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x50;
    cond.sourceIP[10] = 0xc4;
    cond.sourceIP[11] = 0xff;
    cond.sourceIP[12] = 0xfe;
    cond.sourceIP[13] = 0x04;
    cond.sourceIP[14] = 0x90;
    cond.sourceIP[15] = 0x02;
    cond.sourceEID = 25;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 1;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + (sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0xfe;
    cond.sourceIP[1] = 0x80;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x50;
    cond.sourceIP[10] = 0xc4;
    cond.sourceIP[11] = 0xff;
    cond.sourceIP[12] = 0xfe;
    cond.sourceIP[13] = 0x04;
    cond.sourceIP[14] = 0x90;
    cond.sourceIP[15] = 0x02;
    cond.sourceEID = 24;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 2;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + 2*(sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0xfe;
    cond.sourceIP[1] = 0x80;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x50;
    cond.sourceIP[10] = 0xc4;
    cond.sourceIP[11] = 0xff;
    cond.sourceIP[12] = 0xfe;
    cond.sourceIP[13] = 0x04;
    cond.sourceIP[14] = 0x90;
    cond.sourceIP[15] = 0x02;
    cond.sourceEID = 24;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 1;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + 3*(sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0xfe;
    cond.sourceIP[1] = 0x80;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x50;
    cond.sourceIP[10] = 0xc4;
    cond.sourceIP[11] = 0xff;
    cond.sourceIP[12] = 0xfe;
    cond.sourceIP[13] = 0x04;
    cond.sourceIP[14] = 0x90;
    cond.sourceIP[15] = 0x02;
    cond.sourceEID = 24;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 0;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + 4*(sizeof(struct condition)), sizeof(struct condition));

    PROCESS_PAUSE();
    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 25;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 2;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + 5*(sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 25;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 1;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + 6*(sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 24;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 2;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + 7*(sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 24;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 1;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + 8*(sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();

    cond.sourceIP[0] = 0x00;
    cond.sourceIP[1] = 0x00;
    cond.sourceIP[2] = 0x00;
    cond.sourceIP[3] = 0x00;
    cond.sourceIP[4] = 0x00;
    cond.sourceIP[5] = 0x00;
    cond.sourceIP[6] = 0x00;
    cond.sourceIP[7] = 0x00;
    cond.sourceIP[8] = 0x00;
    cond.sourceIP[9] = 0x00;
    cond.sourceIP[10] = 0x00;
    cond.sourceIP[11] = 0x00;
    cond.sourceIP[12] = 0x00;
    cond.sourceIP[13] = 0x00;
    cond.sourceIP[14] = 0x00;
    cond.sourceIP[15] = 0x01;
    cond.sourceEID = 24;
    cond.op = STM_EQ;
    cond.value.datatype = HXB_DTYPE_UINT8;
    *(uint8_t*)&cond.value.data = 0;
    eeprom_write_block(&cond, (void*)EE_STATEMACHINE_CONDITIONS + 9*(sizeof(struct condition)), sizeof(struct condition));
    PROCESS_PAUSE();
  }

